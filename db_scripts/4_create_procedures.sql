DELIMITER $$


CREATE OR REPLACE PROCEDURE P_CREATE_USER (
	IN PI_FIRST_NAME VARCHAR(255),
	IN PI_LAST_NAME VARCHAR(255),
	IN PI_USERNAME VARCHAR(255),
	IN PI_EMAIL VARCHAR(255),
	IN PI_PASSWORD_HASH CHAR(60),
	IN PI_PROFILE_PICTURE_PATH VARCHAR(255),
	OUT PO_USER_ID INT
)
BEGIN
	INSERT INTO USERS (
		FIRST_NAME,
		LAST_NAME,
		USERNAME,
		EMAIL,
		PASSWORD_HASH,
		PROFILE_PICTURE_PATH
	)
	VALUES (
		PI_FIRST_NAME,
		PI_LAST_NAME,
		PI_USERNAME,
		PI_EMAIL,
		PI_PASSWORD_HASH,
		PI_PROFILE_PICTURE_PATH
	);

	SET PO_USER_ID = LAST_INSERT_ID();
END;
$$


CREATE OR REPLACE PROCEDURE P_CREATE_CATEGORY (
	IN PI_OWNER_ID INT,
	IN PI_NAME VARCHAR(255),
	IN PI_COLOR_SCHEME CHAR(7),
	OUT PO_CATEGORY_ID INT
)
BEGIN
	INSERT INTO CATEGORIES (
		OWNER_ID,
		NAME,
		COLOR_SCHEME_ID
	)
	VALUES (
		PI_OWNER_ID,
		PI_NAME,
		PI_COLOR_SCHEME
	);

	SET PO_CATEGORY_ID = LAST_INSERT_ID();
END;
$$


CREATE OR REPLACE PROCEDURE P_EDIT_CATEGORY (
	IN PI_ID INT,
	IN PI_OWNER_ID INT,
	IN PI_NAME VARCHAR(255),
	IN PI_COLOR_SCHEME_ID INT
)
BEGIN
	UPDATE 
		CATEGORIES
	SET 
		NAME = PI_NAME,
		COLOR_SCHEME_ID = PI_COLOR_SCHEME_ID
	WHERE
		ID = PI_ID AND
		OWNER_ID = PI_OWNER_ID;
END;
$$


CREATE OR REPLACE PROCEDURE P_DELETE_CATEGORY (
	IN PI_ID INT,
	IN PI_USER_ID INT
)
BEGIN
	DELETE FROM 
		CATEGORIES
	WHERE 
		OWNER_ID = PI_USER_ID AND 
		ID = PI_ID;
END;
$$

CREATE OR REPLACE PROCEDURE P_CHECK_PRIVILEGES (
	IN PI_USER_ID INT,
	IN PI_OBJECT_ID INT,
	IN PI_OBJECT_TYPE VARCHAR(100),
	IN PI_PRIVILEGE VARCHAR(20),
	OUT PO_HAS_PRIVILEGE BOOLEAN
)
BEGIN
	DECLARE V_QUERY VARCHAR(1000);

	SET @TABLE_NAME = CONCAT(PI_OBJECT_TYPE, '_PRIVILEGES');
	SET @QUERY = CONCAT('
		SELECT
			COUNT(*) > 0
		INTO 
			@HAS_PRIVILEGE
		FROM ', 
			@TABLE_NAME ,'
		WHERE
			USER_ID = ? AND ',
			PI_OBJECT_TYPE ,'_ID = ? AND
			PRIVILEGE = ?;
	');

	PREPARE STMT FROM @QUERY;
	SET 
		@USER_ID = PI_USER_ID,
		@OBJECT_ID = PI_OBJECT_ID,
		@PRIVILEGE = PI_PRIVILEGE;
	EXECUTE STMT USING @USER_ID, @OBJECT_ID, @PRIVILEGE;
	DEALLOCATE PREPARE STMT;

	SET PO_HAS_PRIVILEGE = @HAS_PRIVILEGE;
END;
$$

CREATE OR REPLACE PROCEDURE P_APPEND_CATEGORY (
    IN PI_CATEGORY_ID INT,
    IN PI_OBJECT_ID INT,
    IN PI_OBJECT_TYPE VARCHAR(100),
    IN PI_USER_ID INT
)
BEGIN
    DECLARE V_QUERY VARCHAR(1000);
    DECLARE V_NUMBER_OF_ROWS INT;

    DECLARE V_IS_VIEWER BOOLEAN;

    -- Initialize session variables
    SET @table_name = NULL;
    SET @query = NULL;
    SET @num_rows = NULL;

    CALL P_CHECK_PRIVILEGES(PI_USER_ID, PI_OBJECT_ID, PI_OBJECT_TYPE, 'VIEW', V_IS_VIEWER);
    IF V_IS_VIEWER THEN
        SET @table_name = CONCAT(PI_OBJECT_TYPE, 'S_HAVE_CATEGORIES');
        SET @query = CONCAT('SELECT COUNT(*) INTO @num_rows FROM ', @table_name, ' WHERE ', PI_OBJECT_TYPE, '_ID = ? AND CATEGORY_ID = ?');
        PREPARE STMT FROM @query;
        EXECUTE STMT USING PI_OBJECT_ID, PI_CATEGORY_ID;
        DEALLOCATE PREPARE STMT;

        SET V_NUMBER_OF_ROWS = @num_rows;

        IF V_NUMBER_OF_ROWS = 0 THEN
            SET @query = CONCAT('INSERT INTO ', @table_name, '(', PI_OBJECT_TYPE, '_ID, CATEGORY_ID) VALUES (?, ?)');
            PREPARE STMT FROM @query;
            EXECUTE STMT USING PI_OBJECT_ID, PI_CATEGORY_ID;
            DEALLOCATE PREPARE STMT;
        END IF;
    ELSE
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'error-no-privileges';
    END IF;
END;


CREATE OR REPLACE PROCEDURE _P_GRANT_ACCESS (
	IN PI_USER_ID INT,
	IN PI_OBJECT_ID INT,
	IN PI_PRIVILEGE VARCHAR(10),
	IN PI_OBJECT_TYPE VARCHAR(50)
)
BEGIN
	DECLARE QUERY VARCHAR(500);
	DECLARE TABLE_NAME VARCHAR(500);

	SET TABLE_NAME = CONCAT(PI_OBJECT_TYPE, '_PRIVILEGES');
	SET QUERY = CONCAT('
		INSERT INTO ', TABLE_NAME, ' (
			USER_ID, 
			', PI_OBJECT_TYPE, '_ID, 
			PRIVILEGE
		) 
		VALUES (
			?, 
			?, 
			?
		)');

	PREPARE STMT FROM QUERY;
	EXECUTE STMT USING PI_USER_ID, PI_OBJECT_ID, PI_PRIVILEGE;
	DEALLOCATE PREPARE STMT;
END;
$$

CREATE OR REPLACE PROCEDURE P_UPLOAD_FILE (
	IN PI_ORIGINAL_NAME VARCHAR(1000),
	IN PI_SERVER_NAME VARCHAR(1000),
	IN PI_EXTENSION VARCHAR(100),
	IN PI_TITLE VARCHAR(1000),
	IN PI_DESCRIPTION TEXT,
	IN PI_USER_ID INT,
	OUT PO_FILE_ID INT
)
BEGIN
	-- HANDLE EMPTY STRINGS
	SET PI_ORIGINAL_NAME = NULLIF(PI_ORIGINAL_NAME, '');
	SET PI_SERVER_NAME = NULLIF(PI_SERVER_NAME, '');
	SET PI_EXTENSION = NULLIF(PI_EXTENSION, '');
	SET PI_TITLE = NULLIF(PI_TITLE, '');
	SET PI_DESCRIPTION = NULLIF(PI_DESCRIPTION , '');

	-- UPLOAD THE FILE.
	INSERT INTO FILES (
		ORIGINAL_NAME,
		SERVER_NAME,
		EXTENSION,
		TITLE,
		DESCRIPTION,
		UPLOADED_ON
	)
	VALUES (
		PI_ORIGINAL_NAME,
		PI_SERVER_NAME,
		PI_EXTENSION,
		PI_TITLE,
		PI_DESCRIPTION,
		NOW()
	);

	SET PO_FILE_ID = LAST_INSERT_ID();

	-- ADD THE ACCESSES.
	CALL _P_GRANT_ACCESS(PI_USER_ID, PO_FILE_ID, 'VIEW', 'FILE');
	CALL _P_GRANT_ACCESS(PI_USER_ID, PO_FILE_ID, 'EDIT', 'FILE');
END;
$$

DELIMITER ;
